// Copyright 1998-2016 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Private/StrategyKitPrivatePCH.h"
#include "StrategyKit.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode1StrategyKit() {}
FName STRATEGYKIT_ExGetSeamlessTravelActorList = FName(TEXT("ExGetSeamlessTravelActorList"));
FName STRATEGYKIT_NeedDealSwipe = FName(TEXT("NeedDealSwipe"));
FName STRATEGYKIT_OnInputHold = FName(TEXT("OnInputHold"));
FName STRATEGYKIT_OnInputHoldReleased = FName(TEXT("OnInputHoldReleased"));
FName STRATEGYKIT_OnInputSwipeReleased = FName(TEXT("OnInputSwipeReleased"));
FName STRATEGYKIT_OnInputSwipeStart = FName(TEXT("OnInputSwipeStart"));
FName STRATEGYKIT_OnInputSwipeUpdate = FName(TEXT("OnInputSwipeUpdate"));
FName STRATEGYKIT_OnInputTap = FName(TEXT("OnInputTap"));
FName STRATEGYKIT_OnSeamlessTravelFinlish = FName(TEXT("OnSeamlessTravelFinlish"));
FName STRATEGYKIT_OnSelectionGained = FName(TEXT("OnSelectionGained"));
FName STRATEGYKIT_OnSelectionLost = FName(TEXT("OnSelectionLost"));
	void UStrategyCameraComponent::StaticRegisterNativesUStrategyCameraComponent()
	{
	}
	IMPLEMENT_CLASS(UStrategyCameraComponent, 3100849495);
	void AStrategyController::StaticRegisterNativesAStrategyController()
	{
		FNativeFunctionRegistrar::RegisterFunction(AStrategyController::StaticClass(), "ClearSelectedActor",(Native)&AStrategyController::execClearSelectedActor);
		FNativeFunctionRegistrar::RegisterFunction(AStrategyController::StaticClass(), "ForceSelecteActor",(Native)&AStrategyController::execForceSelecteActor);
	}
	IMPLEMENT_CLASS(AStrategyController, 2987642026);
	TArray<AActor*> AStrategyGameMode::ExGetSeamlessTravelActorList(bool bToEntry)
	{
		StrategyGameMode_eventExGetSeamlessTravelActorList_Parms Parms;
		Parms.bToEntry=bToEntry ? true : false;
		ProcessEvent(FindFunctionChecked(STRATEGYKIT_ExGetSeamlessTravelActorList),&Parms);
		return Parms.ReturnValue;
	}
	void AStrategyGameMode::OnSeamlessTravelFinlish()
	{
		ProcessEvent(FindFunctionChecked(STRATEGYKIT_OnSeamlessTravelFinlish),NULL);
	}
	void AStrategyGameMode::StaticRegisterNativesAStrategyGameMode()
	{
		FNativeFunctionRegistrar::RegisterFunction(AStrategyGameMode::StaticClass(), "IsInSeamlessTravel",(Native)&AStrategyGameMode::execIsInSeamlessTravel);
		FNativeFunctionRegistrar::RegisterFunction(AStrategyGameMode::StaticClass(), "SeamlessTravel",(Native)&AStrategyGameMode::execSeamlessTravel);
		FNativeFunctionRegistrar::RegisterFunction(AStrategyGameMode::StaticClass(), "SetSeamlessTravelMidpointPause",(Native)&AStrategyGameMode::execSetSeamlessTravelMidpointPause);
	}
	IMPLEMENT_CLASS(AStrategyGameMode, 568492343);
	void AStrategyPawn::StaticRegisterNativesAStrategyPawn()
	{
	}
	IMPLEMENT_CLASS(AStrategyPawn, 2152099589);
	void UTouchInput::StaticRegisterNativesUTouchInput()
	{
	}
	IMPLEMENT_CLASS(UTouchInput, 2552856300);
static class UEnum* ETouchInputEnum_StaticEnum()
{
	extern STRATEGYKIT_API class UPackage* Z_Construct_UPackage__Script_StrategyKit();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern STRATEGYKIT_API class UEnum* Z_Construct_UEnum_StrategyKit_ETouchInputEnum();
		Singleton = GetStaticEnum(Z_Construct_UEnum_StrategyKit_ETouchInputEnum, Z_Construct_UPackage__Script_StrategyKit(), TEXT("ETouchInputEnum"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ETouchInputEnum(ETouchInputEnum_StaticEnum, TEXT("/Script/StrategyKit"), TEXT("ETouchInputEnum"), false, nullptr, nullptr);
	bool ITouchInputInterface::NeedDealSwipe()
	{
		check(0 && "Do not directly call Event functions in Interfaces. Call Execute_NeedDealSwipe instead.");
		TouchInputInterface_eventNeedDealSwipe_Parms Parms;
		return Parms.ReturnValue;
	}
	bool ITouchInputInterface::OnInputHold()
	{
		check(0 && "Do not directly call Event functions in Interfaces. Call Execute_OnInputHold instead.");
		TouchInputInterface_eventOnInputHold_Parms Parms;
		return Parms.ReturnValue;
	}
	bool ITouchInputInterface::OnInputHoldReleased(float DownTime)
	{
		check(0 && "Do not directly call Event functions in Interfaces. Call Execute_OnInputHoldReleased instead.");
		TouchInputInterface_eventOnInputHoldReleased_Parms Parms;
		return Parms.ReturnValue;
	}
	bool ITouchInputInterface::OnInputSwipeReleased(FVector const& DeltaPosition, float DownTime)
	{
		check(0 && "Do not directly call Event functions in Interfaces. Call Execute_OnInputSwipeReleased instead.");
		TouchInputInterface_eventOnInputSwipeReleased_Parms Parms;
		return Parms.ReturnValue;
	}
	bool ITouchInputInterface::OnInputSwipeStart(FVector const& StartPosition)
	{
		check(0 && "Do not directly call Event functions in Interfaces. Call Execute_OnInputSwipeStart instead.");
		TouchInputInterface_eventOnInputSwipeStart_Parms Parms;
		return Parms.ReturnValue;
	}
	bool ITouchInputInterface::OnInputSwipeUpdate(FVector const& DeltaPosition)
	{
		check(0 && "Do not directly call Event functions in Interfaces. Call Execute_OnInputSwipeUpdate instead.");
		TouchInputInterface_eventOnInputSwipeUpdate_Parms Parms;
		return Parms.ReturnValue;
	}
	bool ITouchInputInterface::OnInputTap()
	{
		check(0 && "Do not directly call Event functions in Interfaces. Call Execute_OnInputTap instead.");
		TouchInputInterface_eventOnInputTap_Parms Parms;
		return Parms.ReturnValue;
	}
	bool ITouchInputInterface::OnSelectionGained(ETouchInputEnum InputType)
	{
		check(0 && "Do not directly call Event functions in Interfaces. Call Execute_OnSelectionGained instead.");
		TouchInputInterface_eventOnSelectionGained_Parms Parms;
		return Parms.ReturnValue;
	}
	bool ITouchInputInterface::OnSelectionLost(FVector const& NewPosition, AActor* NewActor, ETouchInputEnum InputType)
	{
		check(0 && "Do not directly call Event functions in Interfaces. Call Execute_OnSelectionLost instead.");
		TouchInputInterface_eventOnSelectionLost_Parms Parms;
		return Parms.ReturnValue;
	}
	void UTouchInputInterface::StaticRegisterNativesUTouchInputInterface()
	{
	}
	IMPLEMENT_CLASS(UTouchInputInterface, 2645393461);
	bool ITouchInputInterface::Execute_NeedDealSwipe(UObject* O)
	{
		check(O != NULL);
		check(O->GetClass()->ImplementsInterface(UTouchInputInterface::StaticClass()));
		TouchInputInterface_eventNeedDealSwipe_Parms Parms;
		UFunction* const Func = O->FindFunction(STRATEGYKIT_NeedDealSwipe);
		if (Func)
		{
			O->ProcessEvent(Func, &Parms);
		}
		return Parms.ReturnValue;
	}
	bool ITouchInputInterface::Execute_OnInputHold(UObject* O)
	{
		check(O != NULL);
		check(O->GetClass()->ImplementsInterface(UTouchInputInterface::StaticClass()));
		TouchInputInterface_eventOnInputHold_Parms Parms;
		UFunction* const Func = O->FindFunction(STRATEGYKIT_OnInputHold);
		if (Func)
		{
			O->ProcessEvent(Func, &Parms);
		}
		return Parms.ReturnValue;
	}
	bool ITouchInputInterface::Execute_OnInputHoldReleased(UObject* O, float DownTime)
	{
		check(O != NULL);
		check(O->GetClass()->ImplementsInterface(UTouchInputInterface::StaticClass()));
		TouchInputInterface_eventOnInputHoldReleased_Parms Parms;
		UFunction* const Func = O->FindFunction(STRATEGYKIT_OnInputHoldReleased);
		if (Func)
		{
			Parms.DownTime=DownTime;
			O->ProcessEvent(Func, &Parms);
		}
		return Parms.ReturnValue;
	}
	bool ITouchInputInterface::Execute_OnInputSwipeReleased(UObject* O, FVector const& DeltaPosition, float DownTime)
	{
		check(O != NULL);
		check(O->GetClass()->ImplementsInterface(UTouchInputInterface::StaticClass()));
		TouchInputInterface_eventOnInputSwipeReleased_Parms Parms;
		UFunction* const Func = O->FindFunction(STRATEGYKIT_OnInputSwipeReleased);
		if (Func)
		{
			Parms.DeltaPosition=DeltaPosition;
			Parms.DownTime=DownTime;
			O->ProcessEvent(Func, &Parms);
		}
		return Parms.ReturnValue;
	}
	bool ITouchInputInterface::Execute_OnInputSwipeStart(UObject* O, FVector const& StartPosition)
	{
		check(O != NULL);
		check(O->GetClass()->ImplementsInterface(UTouchInputInterface::StaticClass()));
		TouchInputInterface_eventOnInputSwipeStart_Parms Parms;
		UFunction* const Func = O->FindFunction(STRATEGYKIT_OnInputSwipeStart);
		if (Func)
		{
			Parms.StartPosition=StartPosition;
			O->ProcessEvent(Func, &Parms);
		}
		return Parms.ReturnValue;
	}
	bool ITouchInputInterface::Execute_OnInputSwipeUpdate(UObject* O, FVector const& DeltaPosition)
	{
		check(O != NULL);
		check(O->GetClass()->ImplementsInterface(UTouchInputInterface::StaticClass()));
		TouchInputInterface_eventOnInputSwipeUpdate_Parms Parms;
		UFunction* const Func = O->FindFunction(STRATEGYKIT_OnInputSwipeUpdate);
		if (Func)
		{
			Parms.DeltaPosition=DeltaPosition;
			O->ProcessEvent(Func, &Parms);
		}
		return Parms.ReturnValue;
	}
	bool ITouchInputInterface::Execute_OnInputTap(UObject* O)
	{
		check(O != NULL);
		check(O->GetClass()->ImplementsInterface(UTouchInputInterface::StaticClass()));
		TouchInputInterface_eventOnInputTap_Parms Parms;
		UFunction* const Func = O->FindFunction(STRATEGYKIT_OnInputTap);
		if (Func)
		{
			O->ProcessEvent(Func, &Parms);
		}
		return Parms.ReturnValue;
	}
	bool ITouchInputInterface::Execute_OnSelectionGained(UObject* O, ETouchInputEnum InputType)
	{
		check(O != NULL);
		check(O->GetClass()->ImplementsInterface(UTouchInputInterface::StaticClass()));
		TouchInputInterface_eventOnSelectionGained_Parms Parms;
		UFunction* const Func = O->FindFunction(STRATEGYKIT_OnSelectionGained);
		if (Func)
		{
			Parms.InputType=InputType;
			O->ProcessEvent(Func, &Parms);
		}
		return Parms.ReturnValue;
	}
	bool ITouchInputInterface::Execute_OnSelectionLost(UObject* O, FVector const& NewPosition, AActor* NewActor, ETouchInputEnum InputType)
	{
		check(O != NULL);
		check(O->GetClass()->ImplementsInterface(UTouchInputInterface::StaticClass()));
		TouchInputInterface_eventOnSelectionLost_Parms Parms;
		UFunction* const Func = O->FindFunction(STRATEGYKIT_OnSelectionLost);
		if (Func)
		{
			Parms.NewPosition=NewPosition;
			Parms.NewActor=NewActor;
			Parms.InputType=InputType;
			O->ProcessEvent(Func, &Parms);
		}
		return Parms.ReturnValue;
	}
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UClass* Z_Construct_UClass_UCameraComponent();
	ENGINE_API class UClass* Z_Construct_UClass_AActor_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_APlayerController();
	ENGINE_API class UClass* Z_Construct_UClass_AGameMode();
	ENGINE_API class UClass* Z_Construct_UClass_APawn();
	ENGINE_API class UClass* Z_Construct_UClass_USpringArmComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UStaticMeshComponent_NoRegister();
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector();

	STRATEGYKIT_API class UClass* Z_Construct_UClass_UStrategyCameraComponent_NoRegister();
	STRATEGYKIT_API class UClass* Z_Construct_UClass_UStrategyCameraComponent();
	STRATEGYKIT_API class UFunction* Z_Construct_UFunction_AStrategyController_ClearSelectedActor();
	STRATEGYKIT_API class UFunction* Z_Construct_UFunction_AStrategyController_ForceSelecteActor();
	STRATEGYKIT_API class UClass* Z_Construct_UClass_AStrategyController_NoRegister();
	STRATEGYKIT_API class UClass* Z_Construct_UClass_AStrategyController();
	STRATEGYKIT_API class UFunction* Z_Construct_UFunction_AStrategyGameMode_ExGetSeamlessTravelActorList();
	STRATEGYKIT_API class UFunction* Z_Construct_UFunction_AStrategyGameMode_IsInSeamlessTravel();
	STRATEGYKIT_API class UFunction* Z_Construct_UFunction_AStrategyGameMode_OnSeamlessTravelFinlish();
	STRATEGYKIT_API class UFunction* Z_Construct_UFunction_AStrategyGameMode_SeamlessTravel();
	STRATEGYKIT_API class UFunction* Z_Construct_UFunction_AStrategyGameMode_SetSeamlessTravelMidpointPause();
	STRATEGYKIT_API class UClass* Z_Construct_UClass_AStrategyGameMode_NoRegister();
	STRATEGYKIT_API class UClass* Z_Construct_UClass_AStrategyGameMode();
	STRATEGYKIT_API class UClass* Z_Construct_UClass_AStrategyPawn_NoRegister();
	STRATEGYKIT_API class UClass* Z_Construct_UClass_AStrategyPawn();
	STRATEGYKIT_API class UClass* Z_Construct_UClass_UTouchInput_NoRegister();
	STRATEGYKIT_API class UClass* Z_Construct_UClass_UTouchInput();
	STRATEGYKIT_API class UEnum* Z_Construct_UEnum_StrategyKit_ETouchInputEnum();
	STRATEGYKIT_API class UFunction* Z_Construct_UFunction_UTouchInputInterface_NeedDealSwipe();
	STRATEGYKIT_API class UFunction* Z_Construct_UFunction_UTouchInputInterface_OnInputHold();
	STRATEGYKIT_API class UFunction* Z_Construct_UFunction_UTouchInputInterface_OnInputHoldReleased();
	STRATEGYKIT_API class UFunction* Z_Construct_UFunction_UTouchInputInterface_OnInputSwipeReleased();
	STRATEGYKIT_API class UFunction* Z_Construct_UFunction_UTouchInputInterface_OnInputSwipeStart();
	STRATEGYKIT_API class UFunction* Z_Construct_UFunction_UTouchInputInterface_OnInputSwipeUpdate();
	STRATEGYKIT_API class UFunction* Z_Construct_UFunction_UTouchInputInterface_OnInputTap();
	STRATEGYKIT_API class UFunction* Z_Construct_UFunction_UTouchInputInterface_OnSelectionGained();
	STRATEGYKIT_API class UFunction* Z_Construct_UFunction_UTouchInputInterface_OnSelectionLost();
	STRATEGYKIT_API class UClass* Z_Construct_UClass_UTouchInputInterface_NoRegister();
	STRATEGYKIT_API class UClass* Z_Construct_UClass_UTouchInputInterface();
	STRATEGYKIT_API class UPackage* Z_Construct_UPackage__Script_StrategyKit();
	UClass* Z_Construct_UClass_UStrategyCameraComponent_NoRegister()
	{
		return UStrategyCameraComponent::StaticClass();
	}
	UClass* Z_Construct_UClass_UStrategyCameraComponent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UCameraComponent();
			Z_Construct_UPackage__Script_StrategyKit();
			OuterClass = UStrategyCameraComponent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_MaxMoveX = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxMoveX"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MaxMoveX, UStrategyCameraComponent), 0x0010000000000005);
				UProperty* NewProp_MaxMoveY = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxMoveY"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MaxMoveY, UStrategyCameraComponent), 0x0010000000000005);
				UProperty* NewProp_SpringArmMaxLength = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SpringArmMaxLength"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(SpringArmMaxLength, UStrategyCameraComponent), 0x0010000000000005);
				UProperty* NewProp_SpringArmMinLength = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SpringArmMinLength"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(SpringArmMinLength, UStrategyCameraComponent), 0x0010000000000005);
				UProperty* NewProp_PinchScale = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PinchScale"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(PinchScale, UStrategyCameraComponent), 0x0010000000000005);
				UProperty* NewProp_MaxSwipeSpeed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxSwipeSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MaxSwipeSpeed, UStrategyCameraComponent), 0x0010000000000005);
				UProperty* NewProp_SwipeScale = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SwipeScale"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(SwipeScale, UStrategyCameraComponent), 0x0010000000000005);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Trigger Mobility Rendering LOD Trigger PhysicsVolume ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("StrategyCameraComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/StrategyCameraComponent.h"));
				MetaData->SetValue(NewProp_MaxMoveX, TEXT("Category"), TEXT("Camera"));
				MetaData->SetValue(NewProp_MaxMoveX, TEXT("ModuleRelativePath"), TEXT("Public/StrategyCameraComponent.h"));
				MetaData->SetValue(NewProp_MaxMoveY, TEXT("Category"), TEXT("Camera"));
				MetaData->SetValue(NewProp_MaxMoveY, TEXT("ModuleRelativePath"), TEXT("Public/StrategyCameraComponent.h"));
				MetaData->SetValue(NewProp_SpringArmMaxLength, TEXT("Category"), TEXT("Camera"));
				MetaData->SetValue(NewProp_SpringArmMaxLength, TEXT("ModuleRelativePath"), TEXT("Public/StrategyCameraComponent.h"));
				MetaData->SetValue(NewProp_SpringArmMinLength, TEXT("Category"), TEXT("Camera"));
				MetaData->SetValue(NewProp_SpringArmMinLength, TEXT("ModuleRelativePath"), TEXT("Public/StrategyCameraComponent.h"));
				MetaData->SetValue(NewProp_PinchScale, TEXT("Category"), TEXT("Camera"));
				MetaData->SetValue(NewProp_PinchScale, TEXT("ModuleRelativePath"), TEXT("Public/StrategyCameraComponent.h"));
				MetaData->SetValue(NewProp_PinchScale, TEXT("ToolTip"), TEXT("The pinch scale of the camera."));
				MetaData->SetValue(NewProp_MaxSwipeSpeed, TEXT("Category"), TEXT("Camera"));
				MetaData->SetValue(NewProp_MaxSwipeSpeed, TEXT("ModuleRelativePath"), TEXT("Public/StrategyCameraComponent.h"));
				MetaData->SetValue(NewProp_SwipeScale, TEXT("Category"), TEXT("Camera"));
				MetaData->SetValue(NewProp_SwipeScale, TEXT("ModuleRelativePath"), TEXT("Public/StrategyCameraComponent.h"));
				MetaData->SetValue(NewProp_SwipeScale, TEXT("ToolTip"), TEXT("End UCameraComponent interface"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UStrategyCameraComponent(Z_Construct_UClass_UStrategyCameraComponent, &UStrategyCameraComponent::StaticClass, TEXT("UStrategyCameraComponent"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UStrategyCameraComponent);
	UFunction* Z_Construct_UFunction_AStrategyController_ClearSelectedActor()
	{
		UObject* Outer=Z_Construct_UClass_AStrategyController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ClearSelectedActor"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("StrategyController"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/StrategyController.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AStrategyController_ForceSelecteActor()
	{
		struct StrategyController_eventForceSelecteActor_Parms
		{
			AActor* NewSelectedActor;
		};
		UObject* Outer=Z_Construct_UClass_AStrategyController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ForceSelecteActor"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(StrategyController_eventForceSelecteActor_Parms));
			UProperty* NewProp_NewSelectedActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NewSelectedActor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(NewSelectedActor, StrategyController_eventForceSelecteActor_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("StrategyController"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/StrategyController.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AStrategyController_NoRegister()
	{
		return AStrategyController::StaticClass();
	}
	UClass* Z_Construct_UClass_AStrategyController()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_APlayerController();
			Z_Construct_UPackage__Script_StrategyKit();
			OuterClass = AStrategyController::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800284;

				OuterClass->LinkChild(Z_Construct_UFunction_AStrategyController_ClearSelectedActor());
				OuterClass->LinkChild(Z_Construct_UFunction_AStrategyController_ForceSelecteActor());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_InputHandler = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("InputHandler"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(InputHandler, AStrategyController), 0x0020080000000000, Z_Construct_UClass_UTouchInput_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AStrategyController_ClearSelectedActor(), "ClearSelectedActor"); // 98361403
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AStrategyController_ForceSelecteActor(), "ForceSelecteActor"); // 825370388
				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Collision Rendering Utilities|Transformation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("StrategyController.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/StrategyController.h"));
				MetaData->SetValue(NewProp_InputHandler, TEXT("ModuleRelativePath"), TEXT("Public/StrategyController.h"));
				MetaData->SetValue(NewProp_InputHandler, TEXT("ToolTip"), TEXT("Custom input handler."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AStrategyController(Z_Construct_UClass_AStrategyController, &AStrategyController::StaticClass, TEXT("AStrategyController"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AStrategyController);
	UFunction* Z_Construct_UFunction_AStrategyGameMode_ExGetSeamlessTravelActorList()
	{
		UObject* Outer=Z_Construct_UClass_AStrategyGameMode();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ExGetSeamlessTravelActorList"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535, sizeof(StrategyGameMode_eventExGetSeamlessTravelActorList_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(ReturnValue, StrategyGameMode_eventExGetSeamlessTravelActorList_Parms), 0x0010000000000580);
			UProperty* NewProp_ReturnValue_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ReturnValue, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_AActor_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bToEntry, StrategyGameMode_eventExGetSeamlessTravelActorList_Parms, bool);
			UProperty* NewProp_bToEntry = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bToEntry"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bToEntry, StrategyGameMode_eventExGetSeamlessTravelActorList_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(bToEntry, StrategyGameMode_eventExGetSeamlessTravelActorList_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/StrategyGameMode.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AStrategyGameMode_IsInSeamlessTravel()
	{
		struct StrategyGameMode_eventIsInSeamlessTravel_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AStrategyGameMode();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsInSeamlessTravel"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(StrategyGameMode_eventIsInSeamlessTravel_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, StrategyGameMode_eventIsInSeamlessTravel_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, StrategyGameMode_eventIsInSeamlessTravel_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, StrategyGameMode_eventIsInSeamlessTravel_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameMode"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/StrategyGameMode.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AStrategyGameMode_OnSeamlessTravelFinlish()
	{
		UObject* Outer=Z_Construct_UClass_AStrategyGameMode();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnSeamlessTravelFinlish"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/StrategyGameMode.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AStrategyGameMode_SeamlessTravel()
	{
		struct StrategyGameMode_eventSeamlessTravel_Parms
		{
			FString InURL;
		};
		UObject* Outer=Z_Construct_UClass_AStrategyGameMode();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SeamlessTravel"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(StrategyGameMode_eventSeamlessTravel_Parms));
			UProperty* NewProp_InURL = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("InURL"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(InURL, StrategyGameMode_eventSeamlessTravel_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameMode"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/StrategyGameMode.h"));
			MetaData->SetValue(NewProp_InURL, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AStrategyGameMode_SetSeamlessTravelMidpointPause()
	{
		struct StrategyGameMode_eventSetSeamlessTravelMidpointPause_Parms
		{
			bool bNowPaused;
		};
		UObject* Outer=Z_Construct_UClass_AStrategyGameMode();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetSeamlessTravelMidpointPause"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(StrategyGameMode_eventSetSeamlessTravelMidpointPause_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bNowPaused, StrategyGameMode_eventSetSeamlessTravelMidpointPause_Parms, bool);
			UProperty* NewProp_bNowPaused = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bNowPaused"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bNowPaused, StrategyGameMode_eventSetSeamlessTravelMidpointPause_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(bNowPaused, StrategyGameMode_eventSetSeamlessTravelMidpointPause_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameMode"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/StrategyGameMode.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("this function allows pausing the seamless travel in the middle,\nright before it staStrategy loading the destination (i.e. while in the transition level)\nthis gives the opportunity to perform any other loading tasks before the final transition\nthis function has no effect if we have already started loading the destination (you will get a log warning if this is the case)\n@param bNowPaused - whether the transition should now be paused"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AStrategyGameMode_NoRegister()
	{
		return AStrategyGameMode::StaticClass();
	}
	UClass* Z_Construct_UClass_AStrategyGameMode()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AGameMode();
			Z_Construct_UPackage__Script_StrategyKit();
			OuterClass = AStrategyGameMode::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2080028C;

				OuterClass->LinkChild(Z_Construct_UFunction_AStrategyGameMode_ExGetSeamlessTravelActorList());
				OuterClass->LinkChild(Z_Construct_UFunction_AStrategyGameMode_IsInSeamlessTravel());
				OuterClass->LinkChild(Z_Construct_UFunction_AStrategyGameMode_OnSeamlessTravelFinlish());
				OuterClass->LinkChild(Z_Construct_UFunction_AStrategyGameMode_SeamlessTravel());
				OuterClass->LinkChild(Z_Construct_UFunction_AStrategyGameMode_SetSeamlessTravelMidpointPause());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AStrategyGameMode_ExGetSeamlessTravelActorList(), "ExGetSeamlessTravelActorList"); // 2538171933
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AStrategyGameMode_IsInSeamlessTravel(), "IsInSeamlessTravel"); // 3740241038
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AStrategyGameMode_OnSeamlessTravelFinlish(), "OnSeamlessTravelFinlish"); // 617525115
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AStrategyGameMode_SeamlessTravel(), "SeamlessTravel"); // 1499548046
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AStrategyGameMode_SetSeamlessTravelMidpointPause(), "SetSeamlessTravelMidpointPause"); // 2423395532
				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Info Rendering MovementReplication Replication Actor Input Movement Collision Rendering Utilities|Transformation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("StrategyGameMode.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/StrategyGameMode.h"));
				MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AStrategyGameMode(Z_Construct_UClass_AStrategyGameMode, &AStrategyGameMode::StaticClass, TEXT("AStrategyGameMode"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AStrategyGameMode);
	UClass* Z_Construct_UClass_AStrategyPawn_NoRegister()
	{
		return AStrategyPawn::StaticClass();
	}
	UClass* Z_Construct_UClass_AStrategyPawn()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_APawn();
			Z_Construct_UPackage__Script_StrategyKit();
			OuterClass = AStrategyPawn::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_SpringArm = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SpringArm"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(SpringArm, AStrategyPawn), 0x00100000000b001d, Z_Construct_UClass_USpringArmComponent_NoRegister());
				UProperty* NewProp_Camera = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Camera"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Camera, AStrategyPawn), 0x00100000000b001d, Z_Construct_UClass_UStrategyCameraComponent_NoRegister());
				UProperty* NewProp_HullMesh = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("HullMesh"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(HullMesh, AStrategyPawn), 0x00100000000b001d, Z_Construct_UClass_UStaticMeshComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("StrategyPawn.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/StrategyPawn.h"));
				MetaData->SetValue(NewProp_SpringArm, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_SpringArm, TEXT("Category"), TEXT("StrategyPawn"));
				MetaData->SetValue(NewProp_SpringArm, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_SpringArm, TEXT("ModuleRelativePath"), TEXT("Public/StrategyPawn.h"));
				MetaData->SetValue(NewProp_SpringArm, TEXT("ToolTip"), TEXT("Spring arm that will offset the camera"));
				MetaData->SetValue(NewProp_Camera, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_Camera, TEXT("Category"), TEXT("StrategyPawn"));
				MetaData->SetValue(NewProp_Camera, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_Camera, TEXT("ModuleRelativePath"), TEXT("Public/StrategyPawn.h"));
				MetaData->SetValue(NewProp_Camera, TEXT("ToolTip"), TEXT("Camera component that will be our viewpoint"));
				MetaData->SetValue(NewProp_HullMesh, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_HullMesh, TEXT("Category"), TEXT("StrategyPawn"));
				MetaData->SetValue(NewProp_HullMesh, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_HullMesh, TEXT("ModuleRelativePath"), TEXT("Public/StrategyPawn.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AStrategyPawn(Z_Construct_UClass_AStrategyPawn, &AStrategyPawn::StaticClass, TEXT("AStrategyPawn"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AStrategyPawn);
	UClass* Z_Construct_UClass_UTouchInput_NoRegister()
	{
		return UTouchInput::StaticClass();
	}
	UClass* Z_Construct_UClass_UTouchInput()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_StrategyKit();
			OuterClass = UTouchInput::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("TouchInput.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/TouchInput.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UTouchInput(Z_Construct_UClass_UTouchInput, &UTouchInput::StaticClass, TEXT("UTouchInput"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UTouchInput);
	UEnum* Z_Construct_UEnum_StrategyKit_ETouchInputEnum()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_StrategyKit();
		extern uint32 Get_Z_Construct_UEnum_StrategyKit_ETouchInputEnum_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ETouchInputEnum"), 0, Get_Z_Construct_UEnum_StrategyKit_ETouchInputEnum_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ETouchInputEnum"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ETouchInputEnum::VE_Tap")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ETouchInputEnum::VE_Hold")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ETouchInputEnum::VE_Swipe")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ETouchInputEnum::VE_Human")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ETouchInputEnum::VE_MAX")), 4));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("ETouchInputEnum");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/TouchInputInterface.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("\"BlueprintType\" is essential to include"));
			MetaData->SetValue(ReturnEnum, TEXT("VE_Hold.DisplayName"), TEXT("Hold"));
			MetaData->SetValue(ReturnEnum, TEXT("VE_Human.DisplayName"), TEXT("Human"));
			MetaData->SetValue(ReturnEnum, TEXT("VE_Swipe.DisplayName"), TEXT("Swipe"));
			MetaData->SetValue(ReturnEnum, TEXT("VE_Tap.DisplayName"), TEXT("Tap"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_StrategyKit_ETouchInputEnum_CRC() { return 3915522657U; }
	UFunction* Z_Construct_UFunction_UTouchInputInterface_NeedDealSwipe()
	{
		UObject* Outer=Z_Construct_UClass_UTouchInputInterface();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("NeedDealSwipe"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535, sizeof(TouchInputInterface_eventNeedDealSwipe_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, TouchInputInterface_eventNeedDealSwipe_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, TouchInputInterface_eventNeedDealSwipe_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, TouchInputInterface_eventNeedDealSwipe_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/TouchInputInterface.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("tries to select actor"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UTouchInputInterface_OnInputHold()
	{
		UObject* Outer=Z_Construct_UClass_UTouchInputInterface();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnInputHold"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535, sizeof(TouchInputInterface_eventOnInputHold_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, TouchInputInterface_eventOnInputHold_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, TouchInputInterface_eventOnInputHold_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, TouchInputInterface_eventOnInputHold_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/TouchInputInterface.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("receive input: hold"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UTouchInputInterface_OnInputHoldReleased()
	{
		UObject* Outer=Z_Construct_UClass_UTouchInputInterface();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnInputHoldReleased"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535, sizeof(TouchInputInterface_eventOnInputHoldReleased_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, TouchInputInterface_eventOnInputHoldReleased_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, TouchInputInterface_eventOnInputHoldReleased_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, TouchInputInterface_eventOnInputHoldReleased_Parms), sizeof(bool), true);
			UProperty* NewProp_DownTime = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DownTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(DownTime, TouchInputInterface_eventOnInputHoldReleased_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/TouchInputInterface.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("receive input: hold released"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UTouchInputInterface_OnInputSwipeReleased()
	{
		UObject* Outer=Z_Construct_UClass_UTouchInputInterface();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnInputSwipeReleased"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08C20800, 65535, sizeof(TouchInputInterface_eventOnInputSwipeReleased_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, TouchInputInterface_eventOnInputSwipeReleased_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, TouchInputInterface_eventOnInputSwipeReleased_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, TouchInputInterface_eventOnInputSwipeReleased_Parms), sizeof(bool), true);
			UProperty* NewProp_DownTime = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DownTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(DownTime, TouchInputInterface_eventOnInputSwipeReleased_Parms), 0x0010000000000080);
			UProperty* NewProp_DeltaPosition = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DeltaPosition"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(DeltaPosition, TouchInputInterface_eventOnInputSwipeReleased_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/TouchInputInterface.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("receive input: swipe finished (world space, not screen space)"));
			MetaData->SetValue(NewProp_DeltaPosition, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UTouchInputInterface_OnInputSwipeStart()
	{
		UObject* Outer=Z_Construct_UClass_UTouchInputInterface();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnInputSwipeStart"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08C20800, 65535, sizeof(TouchInputInterface_eventOnInputSwipeStart_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, TouchInputInterface_eventOnInputSwipeStart_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, TouchInputInterface_eventOnInputSwipeStart_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, TouchInputInterface_eventOnInputSwipeStart_Parms), sizeof(bool), true);
			UProperty* NewProp_StartPosition = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("StartPosition"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(StartPosition, TouchInputInterface_eventOnInputSwipeStart_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/TouchInputInterface.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("receive input: swipe update (world space, not screen space)"));
			MetaData->SetValue(NewProp_StartPosition, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UTouchInputInterface_OnInputSwipeUpdate()
	{
		UObject* Outer=Z_Construct_UClass_UTouchInputInterface();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnInputSwipeUpdate"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08C20800, 65535, sizeof(TouchInputInterface_eventOnInputSwipeUpdate_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, TouchInputInterface_eventOnInputSwipeUpdate_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, TouchInputInterface_eventOnInputSwipeUpdate_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, TouchInputInterface_eventOnInputSwipeUpdate_Parms), sizeof(bool), true);
			UProperty* NewProp_DeltaPosition = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DeltaPosition"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(DeltaPosition, TouchInputInterface_eventOnInputSwipeUpdate_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/TouchInputInterface.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("receive input: swipe update (world space, not screen space)"));
			MetaData->SetValue(NewProp_DeltaPosition, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UTouchInputInterface_OnInputTap()
	{
		UObject* Outer=Z_Construct_UClass_UTouchInputInterface();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnInputTap"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535, sizeof(TouchInputInterface_eventOnInputTap_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, TouchInputInterface_eventOnInputTap_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, TouchInputInterface_eventOnInputTap_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, TouchInputInterface_eventOnInputTap_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/TouchInputInterface.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("receive input: tap"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UTouchInputInterface_OnSelectionGained()
	{
		UObject* Outer=Z_Construct_UClass_UTouchInputInterface();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnSelectionGained"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535, sizeof(TouchInputInterface_eventOnSelectionGained_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, TouchInputInterface_eventOnSelectionGained_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, TouchInputInterface_eventOnSelectionGained_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, TouchInputInterface_eventOnSelectionGained_Parms), sizeof(bool), true);
			UProperty* NewProp_InputType = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("InputType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(InputType, TouchInputInterface_eventOnSelectionGained_Parms), 0x0010000000000080, Z_Construct_UEnum_StrategyKit_ETouchInputEnum());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/TouchInputInterface.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("tries to select actor"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UTouchInputInterface_OnSelectionLost()
	{
		UObject* Outer=Z_Construct_UClass_UTouchInputInterface();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnSelectionLost"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08C20800, 65535, sizeof(TouchInputInterface_eventOnSelectionLost_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, TouchInputInterface_eventOnSelectionLost_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, TouchInputInterface_eventOnSelectionLost_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, TouchInputInterface_eventOnSelectionLost_Parms), sizeof(bool), true);
			UProperty* NewProp_InputType = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("InputType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(InputType, TouchInputInterface_eventOnSelectionLost_Parms), 0x0010000000000080, Z_Construct_UEnum_StrategyKit_ETouchInputEnum());
			UProperty* NewProp_NewActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NewActor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(NewActor, TouchInputInterface_eventOnSelectionLost_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_NewPosition = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NewPosition"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(NewPosition, TouchInputInterface_eventOnSelectionLost_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/TouchInputInterface.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("tries to deselect actor"));
			MetaData->SetValue(NewProp_NewPosition, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UTouchInputInterface_NoRegister()
	{
		return UTouchInputInterface::StaticClass();
	}
	UClass* Z_Construct_UClass_UTouchInputInterface()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			UInterface::StaticClass();
			Z_Construct_UPackage__Script_StrategyKit();
			OuterClass = UTouchInputInterface::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20004081;

				OuterClass->LinkChild(Z_Construct_UFunction_UTouchInputInterface_NeedDealSwipe());
				OuterClass->LinkChild(Z_Construct_UFunction_UTouchInputInterface_OnInputHold());
				OuterClass->LinkChild(Z_Construct_UFunction_UTouchInputInterface_OnInputHoldReleased());
				OuterClass->LinkChild(Z_Construct_UFunction_UTouchInputInterface_OnInputSwipeReleased());
				OuterClass->LinkChild(Z_Construct_UFunction_UTouchInputInterface_OnInputSwipeStart());
				OuterClass->LinkChild(Z_Construct_UFunction_UTouchInputInterface_OnInputSwipeUpdate());
				OuterClass->LinkChild(Z_Construct_UFunction_UTouchInputInterface_OnInputTap());
				OuterClass->LinkChild(Z_Construct_UFunction_UTouchInputInterface_OnSelectionGained());
				OuterClass->LinkChild(Z_Construct_UFunction_UTouchInputInterface_OnSelectionLost());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UTouchInputInterface_NeedDealSwipe(), "NeedDealSwipe"); // 3641447951
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UTouchInputInterface_OnInputHold(), "OnInputHold"); // 136466663
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UTouchInputInterface_OnInputHoldReleased(), "OnInputHoldReleased"); // 3351424097
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UTouchInputInterface_OnInputSwipeReleased(), "OnInputSwipeReleased"); // 698218025
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UTouchInputInterface_OnInputSwipeStart(), "OnInputSwipeStart"); // 148146510
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UTouchInputInterface_OnInputSwipeUpdate(), "OnInputSwipeUpdate"); // 2206058395
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UTouchInputInterface_OnInputTap(), "OnInputTap"); // 1288021677
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UTouchInputInterface_OnSelectionGained(), "OnSelectionGained"); // 2219635376
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UTouchInputInterface_OnSelectionLost(), "OnSelectionLost"); // 698470710
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/TouchInputInterface.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UTouchInputInterface(Z_Construct_UClass_UTouchInputInterface, &UTouchInputInterface::StaticClass, TEXT("UTouchInputInterface"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UTouchInputInterface);
	UPackage* Z_Construct_UPackage__Script_StrategyKit()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/StrategyKit")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000080);
			FGuid Guid;
			Guid.A = 0xCA348552;
			Guid.B = 0x36C8D4C5;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
